@page "/clientcoupleeventmale"
@page "/clientcoupleeventmale/{id}"
    @using Data.Models;
    @using Logic.StaticResources;
    @using Microsoft.AspNetCore.Components;
    @using ModellenBureauBlazorVersion3.Client.DataServices;
    @using System;
    @using System.Collections.Generic;
    @using System.Linq;
    @using System.Threading.Tasks;
<section class="employee-edit">
    <h1 class="page-title">Add model to event</h1>
    <EditForm Model="chosenevent" OnValidSubmit="AddModelToEvent">
        <div class="form-group row">
            <label class="col-sm-3"> Eye color</label>
            <InputSelect class="form-control col-sm-8" @bind-Value="@chosenevent">
                @*@foreach (var item in ))
                    {
                        <option value="@ite">@item</option>
                    }*@
                @foreach (var item in clientevents)
                {
                    <option value="@item">@item.NameEvent</option>
                }
            </InputSelect>
            <ValidationMessage class="offset-sm-3 col-sm-8" For="@(() => chosenevent)" />
        </div>
        <button type="submit" class="btn btn-primary edit-btn">Add model to event</button>
    </EditForm>

</section>
    @code {
        [Inject]
        public IAdminDataService _adminDataService { get; set; }
        [Inject]
        public IClientDataService _clientDataService { get; set; }
        [Inject]
        public IEventDataService _eventDataService { get; set; }
        [Inject]
        public IFemaleModelDataService _femaleModelDataService { get; set; }
        [Inject]
        public IMaleModelDataService _maleModelDataService { get; set; }

        [Inject]
        public NavigationManager navmanager { get; set; }
        [Parameter]
        public string id { get; set; }

        List<EventModel> clientevents { get; set; }
        EventModel chosenevent { get; set; }

        protected override async Task OnInitializedAsync()
        {
            clientevents = GeneralStaticdata.currentclientmodel.Events;
        }

        public async void AddModelToEvent()
        {
            var item = await _maleModelDataService.GetMaleModelDetails(id);
            chosenevent.MaleModels.Add(item);
            await _eventDataService.UpdateEventsModel(chosenevent);
            navmanager.NavigateTo("/succesfullyaddedmodel");
        }
    }
